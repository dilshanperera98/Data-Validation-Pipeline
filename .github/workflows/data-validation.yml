name: Data Validation Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

jobs:
  data-validation:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-distutils

    - name: Install Java for PySpark
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel
        pip install pyspark==3.5.0 pandas==2.2.1 numpy==1.26.4 openpyxl==3.1.2

    - name: Prepare data directory
      run: |
        mkdir -p input_data
        # Copy test data from repository or download from external source
        cp -v data/test1.xlsx input_data/ || echo "No local data file found"
        # Alternative download command (uncomment and modify if needed)
        # curl -o input_data/test1.xlsx https://your-data-source/test1.xlsx

    - name: Create reports directory
      run: mkdir -p reports

    - name: Run data validation
      run: |
        echo "Current directory structure:"
        ls -R
        python scripts/data_validation.py

    - name: Upload validation reports
      uses: actions/upload-artifact@v4
      with:
        name: validation-reports
        path: |
          reports/*.xlsx
          reports/*.txt
        if-no-files-found: error

    - name: Check validation status
      id: check_status
      run: |
        if grep -q "Status: FAILED" reports/data_quality_report.txt; then
          echo "VALIDATION_FAILED=true" >> $GITHUB_ENV
        else
          echo "VALIDATION_FAILED=false" >> $GITHUB_ENV
        fi
        
    - name: Send notification on failure
      if: env.VALIDATION_FAILED == 'true'
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'Data Validation Failed',
            body: 'The data validation pipeline detected issues. Please check the latest workflow run for details.'
          })
            